function memo(func) {
	var cache = {};
	return function() {
		var key = JSON.stringify(arguments);
		if(cache[key]) {
			return cache[key];
		} else {
			var val = func.apply(this, arguments);
			cache[key] = val;
			return val;
		}
	}
}

function countInCBNS(num) {
    if (num < 1) {
        return 0;
    }

    var combinations = [];
    var lastCombination = Math.pow(10, num - 1) + num > 1 ? Number.parseInt('1'.repeat(num - 1)) : 0;
    combinations.push(lastCombination.toString());
    for(var pow=0, val = -(Math.pow(10, pow)); val>-lastCombination; pow++) { 
        var finalVal = (lastCombination + val).toString();        
        while (finalVal.length < num) finalVal = "0" + finalVal;
        if(!finalVal.includes('00')) {
            combinations.push(finalVal);
        }        

        if (val%100 === 0) {
            val = val - 1;
        } else if (val%10 === 0){
            var minusVal = Math.pow(10, pow + 1);
            for(j =pow; j > 0; j--) {
                minusVal -= Math.pow(10, j);
            }
            val = val - minusVal
        } else {
            val = val - 9;
        }        
    }

    return combinations;
}